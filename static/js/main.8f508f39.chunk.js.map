{"version":3,"sources":["components/Player.js","components/Song.js","data.js","components/Nav.js","components/LibrarySong.js","components/Library.js","App.js","reportWebVitals.js","index.js"],"names":["Player","isPlaying","setIsPlaying","currentSong","setCurrentSong","songInfo","setSongInfo","audioRef","songs","setSongs","skipTrackHandler","direction","a","currentIndex","findIndex","song","id","length","activeLibraryHandler","current","play","pushedSong","newSongs","map","eachSong","active","getTime","time","Math","floor","slice","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","transform","animationPercentage","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","chillHop","audio","uuidv4","Nav","libraryStatus","setLibraryStatus","theme","setTheme","faMusic","LibrarySong","songSelectHandler","Library","themeChange","primary","secondary","boxShadow","track","document","querySelector","querySelectorAll","forEach","one","libButton","getElementById","border","onmouseover","onmouseleave","App","useState","useEffect","useRef","data","timeUpdateHandler","toFixed","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8f508f39.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faPlay,\n    faPause,\n    faAngleLeft,\n    faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n    isPlaying,\n    setIsPlaying,\n    currentSong,\n    setCurrentSong,\n    songInfo,\n    setSongInfo,\n    audioRef,\n    songs,\n    setSongs,\n}) => {\n    const playSongHandler = () => {\n        if (isPlaying) {\n            audioRef.current.pause();\n        } else {\n            audioRef.current.play();\n        }\n        setIsPlaying(!isPlaying);\n    };\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex(\n            (song) => song.id === currentSong.id\n        );\n        if (direction === \"skip-back\") {\n            if (currentIndex - 1 === -1) {\n                currentIndex += songs.length;\n            }\n            await setCurrentSong(songs[currentIndex - 1]);\n            activeLibraryHandler(songs[currentIndex - 1]);\n        } else {\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n        }\n        if (isPlaying) audioRef.current.play();\n    };\n    const activeLibraryHandler = (pushedSong) => {\n        const newSongs = songs.map((eachSong) => {\n            if (eachSong.id === pushedSong.id) {\n                return {\n                    ...eachSong,\n                    active: true,\n                };\n            } else {\n                return {\n                    ...eachSong,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n    };\n    const getTime = (time) => {\n        //var minutes = Math.floor(time / 60);\n        //var seconds = Math.floor(time % 60);\n        //if (minutes.toString().length === 1) {\n        //    minutes = \"0\" + minutes\n        //}\n        //if (seconds.toString().length === 1) {\n        //    seconds = \"0\" + seconds\n        //}\n        //return (minutes+\":\"+seconds);\n        return (\n            (\"0\" + Math.floor(time / 60)).slice(-2) +\n            \":\" +\n            (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\n    };\n\n    return (\n        <div className=\"player\">\n            <div className=\"time-container\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div\n                    style={{\n                        background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n                    }}\n                    className=\"track\"\n                >\n                    <input\n                        min={0}\n                        max={songInfo.duration || 0}\n                        value={songInfo.currentTime}\n                        onChange={dragHandler}\n                        type=\"range\"\n                    />\n                    <div\n                        className=\"animate-track\"\n                        style={{\n                            transform: `translateX(${songInfo.animationPercentage}%)`,\n                        }}\n                    ></div>\n                </div>\n                <p>\n                    {songInfo.duration ? getTime(songInfo.duration) : \"00:00\"}\n                </p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon\n                    onClick={() => skipTrackHandler(\"skip-back\")}\n                    className=\"skip-back\"\n                    size=\"2x\"\n                    icon={faAngleLeft}\n                />\n                <FontAwesomeIcon\n                    onClick={playSongHandler}\n                    className=\"play\"\n                    size=\"2x\"\n                    icon={isPlaying ? faPause : faPlay}\n                />\n                <FontAwesomeIcon\n                    onClick={() => skipTrackHandler(\"skip-forward\")}\n                    className=\"skip-forward\"\n                    size=\"2x\"\n                    icon={faAngleRight}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Player;\n","const Song = ({currentSong}) => {\n    return (\n        <div className=\"song\">\n            <img src={currentSong.cover} alt={currentSong.name+\" : Image could'nt be loaded\"} ></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    );\n}\n\nexport default Song","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n    return [\n        {\n            name: \"Melodiya\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/75adfe0661d06a9ea66d9c2e99b31e92ae450ebe-1024x1024.jpg\",\n            artist: \"Psalm Trees, FloFilz\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=16060\",\n            color: [\"#FBB438\", \"#EC4933\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Beaver Creek\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n            artist: \"Aso, Middle School, Aviino\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n            color: [\"#205950\", \"#2ab3bf\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Daylight\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n            artist: \"Aiguille\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n            color: [\"#EF8EA9\", \"#ab417f\"],\n            id: uuidv4(),\n            active: true,\n        },\n        {\n            name: \"Keep Going\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n            artist: \"Swørn\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n            color: [\"#CD607D\", \"#c94043\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Nightfall\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n            artist: \"Aiguille\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n            color: [\"#EF8EA9\", \"#ab417f\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Reflection\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n            artist: \"Swørn\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n            color: [\"#CD607D\", \"#c94043\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Under the City Stars\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n            artist: \"Aso, Middle School, Aviino\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n            color: [\"#205950\", \"#2ab3bf\"],\n            id: uuidv4(),\n            active: false,\n        },\n        //ADD MORE HERE\n    ];\n}\n\nexport default chillHop;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\nfunction Nav({ libraryStatus, setLibraryStatus, theme, setTheme }) {\n    return (\n        <nav>\n            <h1\n                onClick={() => {\n                    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n                }}\n            >\n                Fudge\n            </h1>\n            <button id=\"libButton\" onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon id=\"libSvg\" icon={faMusic} />\n            </button>\n        </nav>\n    );\n}\n\nexport default Nav;\n","const LibrarySong = ({\n    audioRef,\n    song,\n    setCurrentSong,\n    songs,\n    isPlaying,\n    setSongs,\n}) => {\n    const songSelectHandler = async () => {\n        await setCurrentSong(song);\n        const newSongs = songs.map((eachSong) => {\n            if (eachSong.id === song.id) {\n                return {\n                    ...eachSong,\n                    active: true,\n                };\n            } else {\n                return {\n                    ...eachSong,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n        if (isPlaying) audioRef.current.play();\n    };\n\n    return (\n        <div\n            onClick={songSelectHandler}\n            className={`library-song ${song.active ? \"selected\" : \"\"}`}\n        >\n            <img\n                src={song.cover}\n                alt={song.name + \" : Image could'nt be loaded\"}\n            ></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    );\n};\n\nexport default LibrarySong;\n","import LibrarySong from \"./LibrarySong\";\n\nconst Library = ({ audioRef, songs, setCurrentSong, isPlaying, setSongs, libraryStatus }) => {\n    return (\n        <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map((song) => (\n                    <LibrarySong\n                        key={song.id}\n                        audioRef={audioRef}\n                        isPlaying={isPlaying}\n                        songs={songs}\n                        setSongs={setSongs}\n                        setCurrentSong={setCurrentSong}\n                        song={song}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Library;\n","import \"./styles/app.scss\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport data from \"./data\";\nimport Nav from \"./components/Nav\";\nimport Library from \"./components/Library\";\nimport { useEffect, useRef, useState } from \"react\";\n\nfunction themeChange(primary, secondary, boxShadow, track) {\n    document.querySelector(\"body\").style.background = primary;\n    document.querySelectorAll(\"svg\").forEach((one) => {\n        one.style.color = secondary;\n    });\n    document.querySelectorAll(\"h1\").forEach((one) => {\n        one.style.color = secondary;\n    });\n    document.querySelectorAll(\"h2\").forEach((one) => {\n        one.style.color = secondary;\n    });\n    document.querySelectorAll(\"h3\").forEach((one) => {\n        one.style.color = secondary;\n    });\n    document.querySelectorAll(\"h4\").forEach((one) => {\n        one.style.color = secondary;\n    });\n    document.querySelector(\".animate-track\").style.background = track;\n    let libButton = document.getElementById(\"libButton\");\n    libButton.style.color = secondary;\n    libButton.style.border = `2px solid ${secondary}`;\n    libButton.onmouseover = () => {\n        libButton.style.background = secondary;\n        libButton.style.color = primary;\n        document.getElementById(\"libSvg\").style.color = primary;\n    };\n    libButton.onmouseleave = () => {\n        libButton.style.background = \"transparent\";\n        libButton.style.color = secondary;\n        document.getElementById(\"libSvg\").style.color = secondary;\n    };\n    document.querySelector(\".library\").style.background = primary;\n    document.querySelector(\".library\").style.boxShadow = boxShadow;\n    document.querySelector(\".time-container\").style.color = secondary;\n}\n\nfunction App() {\n    const [theme, setTheme] = useState(\"light\");\n    useEffect(() => {\n        if (theme === \"dark\") {\n            themeChange(\n                \"rgb(9,9,9)\",\n                \"white\",\n                \"5px 5px 130px rgb(0, 0, 0)\",\n                \"#3b3b3b\"\n            );\n        } else {\n               themeChange(\"white\", \"rgb(65,65,65)\", \"2px 2px 50px rgb(204, 204, 204)\", \"rgb(204, 204, 204)\");\n        }\n    }, [theme]);\n\n    const audioRef = useRef(null);\n\n    const [songs, setSongs] = useState(data());\n    const [currentSong, setCurrentSong] = useState(songs[2]);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0,\n        animationPercentage: 0,\n    });\n    const [libraryStatus, setLibraryStatus] = useState(false);\n\n    const timeUpdateHandler = (e) => {\n        setSongInfo({\n            ...songInfo,\n            currentTime: e.target.currentTime,\n            duration: e.target.duration,\n            animationPercentage: (\n                (e.target.currentTime / e.target.duration) *\n                100\n            ).toFixed(3),\n        });\n    };\n\n    const songEndHandler = async () => {\n        let currentIndex = songs.findIndex(\n            (song) => song.id === currentSong.id\n        );\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        if (isPlaying) audioRef.current.play();\n    };\n\n    return (\n        <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n            <Nav\n                libraryStatus={libraryStatus}\n                setLibraryStatus={setLibraryStatus}\n                theme={theme}\n                setTheme={setTheme}\n            />\n            <Song currentSong={currentSong} />\n            <Player\n                audioRef={audioRef}\n                setSongInfo={setSongInfo}\n                songInfo={songInfo}\n                isPlaying={isPlaying}\n                setIsPlaying={setIsPlaying}\n                currentSong={currentSong}\n                songs={songs}\n                setCurrentSong={setCurrentSong}\n                setSongs={setSongs}\n            />\n            <Library\n                audioRef={audioRef}\n                isPlaying={isPlaying}\n                songs={songs}\n                setSongs={setSongs}\n                setCurrentSong={setCurrentSong}\n                libraryStatus={libraryStatus}\n            />\n            <audio\n                onTimeUpdate={timeUpdateHandler}\n                onLoadedMetadata={timeUpdateHandler}\n                ref={audioRef}\n                src={currentSong.audio}\n                onEnded={songEndHandler}\n            ></audio>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}